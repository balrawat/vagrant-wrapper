#!/bin/bash
###  vag  - shell wrapper for vagrant to manage creation of VMs, 
### creation of directories & modification of Vagrantfile automatically for you

## Prequisites:-
# You should have a linux host machine with VirtualBox & Vagrant installed & working.

###############################################################################################################################
##  Make sure to set the STORAGE_DIR as per your configuration. I'm using /opt/vm directory for storing all the vagrant files.
STORAGE_DIR="/opt/vm"

usage() {
  echo "Syntax of command is:
	vag [-v <vm-name> ] [-b <box-name> ] [-c <cpu cores to use>] [-m <memory to use in MB>] [-t # enabling test mode]
	or
	vag -l  # for listing VMs status from your machine
	vm-name & box-name are mandatory"
}

list_vms() {
echo -e "======================================================================================="
printf '%55s\n' "VIRTUAL BOX VM STATUS REPORT"
echo -e "======================================================================================="
#echo -e "LOCATION\t\tVMNAME\t\tBOXNAME\t\tCPU\tMEMORY\t\tSTATUS"
printf '%10s' "LOCATION" 
printf '%20s' "VMNAME"
printf '%15s' "BOXNAME"
printf '%8s' "CPU"
printf '%12s' "MEMORY"
printf '%20s\n' "STATUS"
echo -e "======================================================================================="
ctr=0
cd $STORAGE_DIR
for i in `ls -d */`; do printf '%10s' "$STORAGE_DIR"; printf '%20s' "${i%%/}"; ctr=$(($ctr + 1)) ;cd $STORAGE_DIR/$i; BOXNAME=`cat Vagrantfile | grep vm.box | awk -F"\"" '{print $2}'`; CPU=`cat Vagrantfile | grep "cpus" | awk -F"\"" '{print $6}'`; MEMORY=`cat Vagrantfile | grep "memory" | awk -F"\"" '{print $6}'`; printf '%15s' "$BOXNAME"; printf '%8s' "$CPU"; printf '%12s' "$MEMORY MB"; (vagrant status | grep running) > /dev/null 2>&1 && printf '%23s\n' "VM is running" || printf '%20s\n' "VM is not running"; done
if [ $ctr -eq 0 ]; then
  echo -e "\t NO VMs FOUND"
fi
echo -e "======================================================================================="
		
}

check_name() {
  if [ "$1" == "" ]; then
    retval=0;
  else
    retval=1;
  fi
  return "$retval"
}
TEST="false"
while getopts "v:b:c:m:lht" opt; do
#	echo $opt $OPTIND $OPTARG
#	exit
	case ${opt} in
	v)
		VMNAME=${OPTARG}
		#echo VMNAME ${OPTARG}
		;;
	b)
		BOXNAME=${OPTARG}
		#echo BOXNAME ${OPTARG}
		;;
	c)
		CPU=${OPTARG}
		#echo CPU ${OPTARG}
		;;
	m)
		MEMORY=${OPTARG}
		#echo MEMORY ${OPTARG}
		;;
	l)
		list_vms
		exit 0
		;;
	t)
		TEST="true"
		;;
	?|h)
	#	echo " Please correct syntax"
		usage
		exit 0
		;;
	esac
done

## check for mandatory options
if [ -z $VMNAME ] || [ -z $BOXNAME ]
then
  echo "You must specify VM name using -v option & Box name using -b option"
  usage
  exit 2
fi

if [ $TEST == "false" ]; then
## create directory & initialize vagrantfile
cd /opt/vm
mkdir $VMNAME && cd $VMNAME
vagrant init $BOXNAME


## populate Vagrantfile

echo "Vagrant.configure(\"2\") do |config|" > Vagrantfile
[ -z $BOXNAME ] || echo "  config.vm.box = \"$BOXNAME\"" >> Vagrantfile
[ -z $VMNAME ] || echo "  config.vm.hostname = \"$VMNAME\"" >> Vagrantfile
echo "  config.vm.provider :virtualbox do |vb|" >> Vagrantfile
echo "    vb.name = \"$VMNAME\"" >> Vagrantfile
[ -z $CPU ] || echo "    vb.customize [\"modifyvm\", :id, \"--cpus\", \"$CPU\"]" >> Vagrantfile
[ -z $MEMORY ] || echo "    vb.customize [\"modifyvm\", :id, \"--memory\", \"$MEMORY\"]" >> Vagrantfile
echo "  end" >> Vagrantfile
echo "end" >> Vagrantfile

## start machine

  vagrant up
fi